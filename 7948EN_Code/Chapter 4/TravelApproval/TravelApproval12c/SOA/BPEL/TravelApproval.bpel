<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Jul 06 14:56:47 GST 2020
  Author:  aelkhodary
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="TravelApproval"
               targetNamespace="http://packthup.com/bpel/travel/"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://packthup.com/bpel/travel/"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://packtpub.com/bpel/travel/"
                xmlns:ns2="http://packtpub.com/service/airline/"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns3="http://packtpub.com/service/employee/"
         xmlns:ns4="http://packtpub.com/events/travel/"
         xmlns:ns5="http://xmlns.oracle.com/ias/pcbpel/NotificationService">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://packtpub.com/service/airline/" location="../Schemas/FlightReservationType.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://packtpub.com/bpel/travel/" location="../Schemas/TravelRequestType.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://packtpub.com/service/airline/" location="../WSDLs/Airline.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://packtpub.com/bpel/travel/" location="../WSDLs/TravelApprovalWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <import namespace="http://packtpub.com/bpel/travel/" location="../WSDLs/TravelApproval.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    
    <!--partnerLink name="travelapproval" partnerLinkType="ns1:travelLT" myRole="travelService"/-->
    <partnerLink name="travelapproval" partnerLinkType="ns1:travelLT" myRole="travelService"/>
    <partnerLink name="AmericanAirlines" partnerLinkType="ns2:flightLT" partnerRole="airlineService"
                 myRole="airlineCustomer"/>
    <partnerLink name="EmployeeTravelStatus" partnerLinkType="ns3:EmployeeTravelStatus"
                 partnerRole="EmployeeTravelStatusPT"/>
    <partnerLink name="DeltaAirlines" partnerLinkType="ns2:flightLT" partnerRole="airlineService"
                 myRole="airlineCustomer"/>
    <partnerLink name="NotificationService1" partnerLinkType="ns5:NotificationServiceLink"
                 partnerRole="NotificationServiceProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="TravelRequest" messageType="ns1:TravelRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="TravelResponse" messageType="ns2:ReservationResponseMessage"/>
    <variable name="FlightDetails" messageType="ns2:FlightTicketRequestMessage"/>
    <variable name="FlightResponseDA" messageType="ns2:TravelResponseMessage"/>
    <variable name="FlightResponseAA" messageType="ns2:TravelResponseMessage"/>
    <variable name="TravelRequest_Event" element="ns1:TravelApproval"/>
    <variable name="TravelResponse_Event" element="ns2:reservationData"/>
    <variable name="TravelResponse_Event_" element="ns2:reservationData"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in TravelApproval.wsdl) -->
    <pick name="Pick1">
      <onMessage bpelx:name="receiveInput" variable="TravelRequest" partnerLink="travelapproval"
                 portType="ns1:TravelApprovalPT" operation="TravelApproval">
        <empty name="Empty"/>
      </onMessage>
      <onMessage bpelx:name="receiveEvent" bpelx:eventName="ns4:NewTravelRequest" variable="TravelRequest_Event">
        <assign name="publishEventPayload">
          <copy>
            <from>$TravelRequest_Event</from>
            <to>$TravelRequest.travelRequest</to>
          </copy>
        </assign>
      </onMessage>
    </pick>
    <scope name="RetrieveEmployeeTravelStatus">
      <variables>
        <variable name="EmpmployeeTravelStatusRequest" messageType="ns3:EmployeeTravelStatusRequestMessage"/>
        <variable name="EmployeeTravelStatusResponse" messageType="ns3:EmployeeTravelStatusResponseMessage"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="Assign-Employee">
          <copy>
            <from>$TravelRequest.travelRequest/employee</from>
            <to>$EmpmployeeTravelStatusRequest.employee</to>
          </copy>
        </assign>
        <invoke name="Invoke-EmployeeTravelStatus" partnerLink="EmployeeTravelStatus"
                portType="ns3:EmployeeTravelStatusPT" operation="EmployeeTravelStatus"
                inputVariable="EmpmployeeTravelStatusRequest" outputVariable="EmployeeTravelStatusResponse"
                bpelx:invokeAsDetail="no"/>
        <assign name="Assign-FlightDetails">
          <copy>
            <from>$TravelRequest.travelRequest/flightData</from>
            <to>$FlightDetails.flightTicketRequest/ns2:flightData</to>
          </copy>
          <copy>
            <from>$EmployeeTravelStatusResponse.travelClass</from>
            <to>$FlightDetails.flightTicketRequest/ns2:travelClass</to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <scope name="CheckFlightAvailability">
      <flow name="Flow">
        <sequence name="Sequence">
          <invoke name="Invoke-DeltaAirLines" partnerLink="DeltaAirlines" portType="ns2:FlightAvailabilityPT"
                  operation="FlightAvailability" inputVariable="FlightDetails" bpelx:invokeAsDetail="no"/>
          <receive name="Receive-DeltaAirLines" partnerLink="DeltaAirlines" portType="ns2:FlightCallbackPT"
                   operation="FlightTicketCallback" variable="FlightResponseDA"/>
        </sequence>
        <sequence name="Sequence2">
          <invoke name="Invoke-AmericanAirLines" bpelx:invokeAsDetail="no" partnerLink="AmericanAirlines"
                  portType="ns2:FlightAvailabilityPT" operation="FlightAvailability" inputVariable="FlightDetails"/>
          <receive name="Receive-AmericanAirLines" partnerLink="AmericanAirlines" portType="ns2:FlightCallbackPT"
                   operation="FlightTicketCallback" variable="FlightResponseAA"/>
        </sequence>
      </flow>
    </scope>
    <scope name="SelectAirline">
      <if name="If">
        <documentation>
          <![CDATA[AA is cheaper]]>
        </documentation>
        <condition>number($FlightResponseAA.confirmationData/Price) &lt;= number($FlightResponseDA.confirmationData/Price)</condition>
        <sequence name="Sequence3">
          <invoke name="AmericanAirLineReservation" partnerLink="AmericanAirlines"
                  portType="ns2:FlightAvailabilityPT" operation="MakeReservation" inputVariable="FlightResponseAA"
                  bpelx:invokeAsDetail="no"/>
          <receive name="AmericanAirLineReservation" partnerLink="AmericanAirlines" portType="ns2:FlightCallbackPT"
                   operation="MakeReservationCallback" variable="TravelResponse"/>
        </sequence>
        <else>
          <sequence name="Sequence4">
            <invoke name="DeltaAirLineReservation" partnerLink="DeltaAirlines"
                    portType="ns2:FlightAvailabilityPT" operation="MakeReservation" inputVariable="FlightResponseDA"
                    bpelx:invokeAsDetail="no"/>
            <receive name="DeltaAirLineReservation" partnerLink="DeltaAirlines" portType="ns2:FlightCallbackPT"
                     operation="MakeReservationCallback" variable="TravelResponse"/>
          </sequence>
        </else>
      </if>
    </scope>
    <scope name="EmailNotification">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:email"></bpelx:pattern>
      </bpelx:annotation>
      <variables>
        <variable name="varNotificationReq" messageType="ns5:EmailNotificationRequest"/>
        <variable name="varNotificationResponse" messageType="ns5:ArrayOfResponse"/>
        <variable name="NotificationServiceFaultVariable" messageType="ns5:NotificationServiceErrorMessage"/>
      </variables>
      <sequence name="Sequence5">
        <assign name="EmailParamsAssign">
          <copy>
            <from>string('Default')</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:FromAccountName</query></to>
          </copy>
          <copy>
            <from>string('')</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:Bcc</query></to>
          </copy>
          <copy>
            <from>string('')</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:Cc</query></to>
          </copy>
          <copy>
            <from>string('')</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:ReplyToAddress</query></to>
          </copy>
          <copy>
            <from>'flight No '</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:Subject</query></to>
          </copy>
          <copy>
            <from>$TravelRequest.travelRequest/mail/ns1:Address</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:To</query></to>
          </copy>
          <copy>
            <from>'TravelApproval'</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:Content/ns5:ContentBody</query></to>
          </copy>
          <copy>
            <from>string('text/html; charset=UTF-8')</from>
            <to variable="varNotificationReq" part="EmailPayload"><query>ns5:Content/ns5:MimeType</query></to>
          </copy>
        </assign>
        <invoke name="InvokeNotificationService" portType="ns5:NotificationService" partnerLink="NotificationService1"
                inputVariable="varNotificationReq" outputVariable="varNotificationResponse"
                operation="sendEmailNotification"/>
      </sequence>
    </scope>
    <invoke name="publishReservationSuccessfulEvent" bpelx:invokeAsDetail="no"
            bpelx:eventName="ns4:ReservationSuccessful" inputVariable="TravelResponse_Event_"/>
    <!-- Generate reply to synchronous request -->
  </sequence>
</process>